{"version":3,"sources":["views/register-view/RegisterView.jsx"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","mapDispatchToProps","onSubmit","register","connect","useState","name","setName","email","setEmail","password","setPassword","registerHandle","e","preventDefault","currentTarget","reset","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","Grid","container","item","xs","TextField","onInput","target","value","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","color","justify","Link","href"],"mappings":"6UAeMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAwG1Ba,EAAqB,CACzBC,SAAUC,KAGGC,cAAQ,KAAMH,EAAdG,EAxGM,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SACtB,EAAwBG,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAMMC,EAAiB,SAACC,GACtBA,EAAEC,iBAMFZ,EALiB,CACfI,KAAMA,EACNE,MAAOA,EACPE,SAAUA,IAGZG,EAAEE,cAAcC,SAGZC,EAAUlC,IAEhB,OACE,eAACmC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWL,EAAQ/B,MAAxB,UACE,cAACqC,EAAA,EAAD,CAAQD,UAAWL,EAAQzB,OAA3B,SACE,cAAC,IAAD,MAEF,cAACgC,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAnC,qBAGA,uBAAMH,UAAWL,EAAQnB,KAAMI,SAAU,SAACW,GAAD,OAAOD,EAAeC,IAA/D,UACE,eAACa,EAAA,EAAD,CAAMC,WAAS,EAACvC,QAAS,EAAzB,UACE,cAACsC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,QA/BK,SAAClB,GAAD,OAAON,EAAQM,EAAEmB,OAAOC,QAgC7BC,aAAa,OACb5B,KAAK,OACLmB,QAAQ,WACRU,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,WAAS,MAGb,cAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,QA3CM,SAAClB,GAAD,OAAOJ,EAASI,EAAEmB,OAAOC,QA4C/BR,QAAQ,WACRU,UAAQ,EACRC,WAAS,EACTI,KAAK,QACLH,GAAG,QACHC,MAAM,gBACNhC,KAAK,QACL4B,aAAa,YAGjB,cAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAvDS,SAAClB,GAAD,OAAOF,EAAYE,EAAEmB,OAAOC,QAwDrCR,QAAQ,WACRU,UAAQ,EACRC,WAAS,EACT9B,KAAK,WACLgC,MAAM,WACNE,KAAK,WACLH,GAAG,WACHH,aAAa,0BAInB,cAACO,EAAA,EAAD,CACED,KAAK,SACLJ,WAAS,EACTX,QAAQ,YACRiB,MAAM,UACNpB,UAAWL,EAAQjB,OALrB,qBASA,cAAC0B,EAAA,EAAD,CAAMC,WAAS,EAACgB,QAAQ,SAAxB,SACE,cAACjB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACgB,EAAA,EAAD,CAAMC,KAAK,SAASpB,QAAQ,QAA5B","file":"static/js/RegisterView.64315c59.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { register } from \"../../redux/auth/auth-operations\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst RegisterView = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const updateName = (e) => setName(e.target.value);\r\n  const updateEmail = (e) => setEmail(e.target.value);\r\n  const updatePassword = (e) => setPassword(e.target.value);\r\n\r\n  const registerHandle = (e) => {\r\n    e.preventDefault();\r\n    const userData = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n    };\r\n    onSubmit(userData);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => registerHandle(e)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                onInput={updateName}\r\n                autoComplete=\"name\"\r\n                name=\"Name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                onInput={updateEmail}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                type=\"email\"\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                onInput={updatePassword}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nRegisterView.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}