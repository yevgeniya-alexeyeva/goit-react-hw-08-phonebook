{"version":3,"sources":["components/Form/Form.module.css","components/Contact/Contact.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","redux/contacts/contacts-operations.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/contacts-view/contactsView.jsx"],"names":["module","exports","getAllContacts","state","contacts","items","userContacts","getIsLoading","loading","getFilteredContacts","createSelector","filter","normalizedFilter","toLowerCase","trim","isNaN","item","name","includes","number","Form","getContactData","e","setState","target","value","saveNewContact","props","addContact","preventDefault","some","alert","currentTarget","reset","className","form","onSubmit","label","input","onInput","this","type","pattern","title","required","button","Component","connect","dispatch","a","contact","actions","addContactRequest","api","addContactSuccess","addContactError","onDelete","contactId","removeContactRequest","removeContactSuccess","removeContactError","removeContact","contactItem","onClick","id","contactList","console","log","itemList","map","changeFilter","filterWrapper","filterLabel","htmlFor","Contacts","getContacts","isLoading","color","height","width","timeout","fetchContactsRequest","fetchContactsSuccess","fetchContactsError"],"mappings":"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","file":"static/js/Contacts.e73f05c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__18D4M\",\"label\":\"Form_label__2nUvn\",\"input\":\"Form_input__2ANrL\",\"button\":\"Form_button__y7hgS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__nZv2f\",\"contactItem\":\"Contact_contactItem__PVF29\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemList\":\"ContactList_itemList__1ebav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__3Y7m7\",\"filterLabel\":\"Filter_filterLabel__c67RZ\"};","import { createSelector } from \"reselect\";\r\n\r\nexport const getAllContacts = (state) => state.contacts.items.userContacts;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getIsLoading = (state) => state.contacts.items.loading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (items, filter) => {\r\n    if (!filter) return items;\r\n    const normalizedFilter = filter.toLowerCase().trim();\r\n    return isNaN(normalizedFilter)\r\n      ? items.filter((item) =>\r\n          item.name.toLowerCase().includes(normalizedFilter)\r\n        )\r\n      : items.filter((item) => item.number.includes(normalizedFilter));\r\n  }\r\n);\r\n","import PropTypes from \"prop-types\";\r\nimport { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { form, label, input, button } from \"./Form.module.css\";\r\nimport { getAllContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  getContactData = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  saveNewContact = (e, name, number) => {\r\n    const { contacts, addContact } = this.props;\r\n\r\n    e.preventDefault();\r\n    contacts.some((item) => item.name === name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : addContact(name, number);\r\n\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  static propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className={form}\r\n        onSubmit={(e) =>\r\n          this.saveNewContact(e, this.state.name, this.state.number)\r\n        }\r\n      >\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            onInput={this.getContactData}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import { actions } from \"./contacts-actions\";\r\nimport * as api from \"../../API/contacts-api\";\r\n// import shortid from \"shortid\";\r\n\r\nexport const getContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const contacts = await api.fetchContacts();\r\n    dispatch(actions.fetchContactsSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = (name, number) => async (dispatch) => {\r\n  const contact = {\r\n    name: name,\r\n    number: number,\r\n  };\r\n  dispatch(actions.addContactRequest());\r\n\r\n  try {\r\n    const contacts = await api.addContact(contact);\r\n    dispatch(actions.addContactSuccess(contacts));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error));\r\n  }\r\n};\r\n\r\nexport const removeContact = (contactId) => async (dispatch) => {\r\n  dispatch(actions.removeContactRequest());\r\n\r\n  try {\r\n    await api.deleteContact(contactId);\r\n    dispatch(actions.removeContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(actions.removeContactError(error));\r\n  }\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { removeContact } from \"../../redux/contacts/contacts-operations\";\r\nimport PropTypes from \"prop-types\";\r\nimport { button, contactItem } from \"./Contact.module.css\";\r\n\r\nconst Contact = (props) => {\r\n  const { item, onDelete } = props;\r\n  return (\r\n    <li className={contactItem}>\r\n      <span>\r\n        {item.name}: {item.number}\r\n      </span>\r\n      <button\r\n        className={button}\r\n        type=\"button\"\r\n        onClick={() => onDelete(item.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (contactId) => dispatch(removeContact(contactId)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n","import { connect } from \"react-redux\";\r\nimport Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\nimport { itemList } from \"./ContactList.module.css\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = (props) => {\r\n  const { contactList, onDelete } = props;\r\n  console.log(contactList);\r\n  return (\r\n    <ul className={itemList}>\r\n      {contactList.map((item) => {\r\n        return <Contact item={item} key={item.id} onDelete={onDelete} />;\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contactList: getFilteredContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { connect } from \"react-redux\";\r\nimport { actions } from \"../../redux/contacts/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterWrapper, filterLabel } from \"./Filter.module.css\";\r\n\r\nconst Filter = (props) => {\r\n  const { value, changeFilter } = props;\r\n  return (\r\n    <div className={filterWrapper}>\r\n      <label className={filterLabel} htmlFor=\"filter\">\r\n        Find contacts by name or number\r\n      </label>\r\n      <input\r\n        id=\"filter\"\r\n        onInput={(e) => changeFilter(e.target.value)}\r\n        value={value}\r\n        type=\"text\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => ({ value: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(actions.changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-operations\";\r\nimport Form from \"../../components/Form\";\r\nimport ContactList from \"../../components/ContactList\";\r\nimport Filter from \"../../components/Filter\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { getIsLoading } from \"../../redux/contacts/contacts-selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Contacts extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  static propTypes = {\r\n    getContacts: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <Form />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        {isLoading ? (\r\n          <Loader\r\n            type=\"ThreeDots\"\r\n            color=\"#fc4445\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000}\r\n          />\r\n        ) : (\r\n          <ContactList />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoading: getIsLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getContacts: () => dispatch(getContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n"],"sourceRoot":""}