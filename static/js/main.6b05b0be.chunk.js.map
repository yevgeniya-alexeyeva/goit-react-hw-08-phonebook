{"version":3,"sources":["redux/contacts/contacts-reducers.js","redux/auth/auth-reducers.js","redux/store.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.jsx","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","API/contacts-api.js","components/Navigation/Navigation.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js"],"names":["userContacts","createReducer","actions","fetchContactsSuccess","_","payload","addContactSuccess","state","removeContactSuccess","filter","id","loading","fetchContactsRequest","fetchContactsError","addContactRequest","addContactError","removeContactRequest","removeContactError","error","items","combineReducers","changeFilter","contactsReducer","initialState","name","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","registerError","loginError","logoutError","getCurrentUserError","isAuthenticated","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","authReducer","authPersistConfig","key","storage","whitelist","rootReducer","auth","persistReducer","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","getIsLoading","connect","to","exact","className","styles","navLink","activeClassName","navLinkActive","AuthNav","userEmail","dispatch","onLogout","logout","type","onClick","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","this","onUserRefresh","isLoading","fallback","color","height","width","timeout","path","MDTP","getCurrentUser","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","fetchContacts","get","then","response","data","addContact","contact","post","deleteContact","contactId","delete","createUser","credentials","loginUser","logoutUser","fetchCurrentUser","module","exports","headers","common","Authorization","register","credential","a","login","getState","currentToken","createAction"],"mappings":"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","file":"static/js/main.6b05b0be.chunk.js","sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport { actions } from \"./contacts-actions\";\r\n\r\nconst userContacts = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.removeContactRequest]: () => true,\r\n  [actions.removeContactSuccess]: () => false,\r\n  [actions.removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [actions.fetchContactsError]: (_, { payload }) => payload,\r\n  [actions.fetchContactsRequest]: () => null,\r\n  [actions.addContactError]: (_, { payload }) => payload,\r\n  [actions.addContactRequest]: () => null,\r\n  [actions.removeContactError]: (_, { payload }) => payload,\r\n  [actions.removeContactRequest]: () => null,\r\n});\r\n\r\nconst items = combineReducers({\r\n  userContacts,\r\n  loading,\r\n  error,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport { authActions } from \"./auth-actions\";\r\n\r\nconst initialState = { name: \"\", email: \"\" };\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(\"\", {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(\"\", {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [authActions.registerRequest]: () => true,\r\n  [authActions.registerSuccess]: () => false,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginRequest]: () => true,\r\n  [authActions.loginSuccess]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.logoutRequest]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n  [authActions.getCurrentUserRequest]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n  loading,\r\n});\r\n\r\nexport default authReducer;\r\n","import {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n  combineReducers,\r\n} from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducers\";\r\nimport authReducer from \"./auth/auth-reducers\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","export const email = (state) => state.auth.user.email;\r\n// export const token = (state) => state.auth.token;\r\nexport const isAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nexport const getIsLoading = (state) => state.auth.loading;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAuthenticated } from \"../../redux/auth/auth-selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={styles.navLink}\r\n        activeClassName={styles.navLinkActive}\r\n      >\r\n        Main\r\n      </NavLink>\r\n\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className={styles.navLink}\r\n          activeClassName={styles.navLinkActive}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst MSTP = (state) => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n});\r\n\r\nexport default connect(MSTP)(Navigation);\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst AuthNav = () => {\r\n  return (\r\n    <div>\r\n      <NavLink to=\"/register\">Sign Up</NavLink>\r\n      <NavLink to=\"/login\">Login</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import { email } from \"../../redux/auth/auth-selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth/auth-operations\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UserMenu = ({ userEmail, onLogout }) => {\r\n  return (\r\n    <div>\r\n      <p>{`${userEmail}`}</p>\r\n      <button type=\"button\" onClick={onLogout}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserMenu.propTypes = {\r\n  userEmail: PropTypes.string.isRequired,\r\n  onLogout: PropTypes.func.isRequired,\r\n};\r\n\r\nconst MSTP = (state) => ({\r\n  userEmail: email(state),\r\n});\r\n\r\nconst MDTP = (dispatch) => ({\r\n  onLogout: () => dispatch(logout()),\r\n});\r\n\r\nexport default connect(MSTP, MDTP)(UserMenu);\r\n","import Navigation from \"../Navigation\";\r\nimport AuthNav from \"../AuthNav\";\r\nimport UserMenu from \"../UserMenu\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAuthenticated } from \"../../redux/auth/auth-selectors\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\n\r\nAppBar.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst MSTP = (state) => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n});\r\n\r\nexport default connect(MSTP)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAuthenticated } from \"../redux/auth/auth-selectors\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAuthenticated } from \"../redux/auth/auth-selectors\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: isAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport AppBar from \"./components/AppBar\";\nimport PropTypes from \"prop-types\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport Loader from \"react-loader-spinner\";\nimport { getCurrentUser } from \"./redux/auth/auth-operations\";\nimport { getIsLoading } from \"./redux/auth/auth-selectors\";\n\nconst HomeView = lazy(() =>\n  import(/* webpackChunkName: \"HomeView\" */ \"./views/home-view\")\n);\nconst RegisterView = lazy(() =>\n  import(/* webpackChunkName: \"RegisterView\" */ \"./views/register-view\")\n);\nconst LoginView = lazy(() =>\n  import(/* webpackChunkName: \"LoginView\" */ \"./views/login-view\")\n);\nconst Contacts = lazy(() =>\n  import(/* webpackChunkName: \"Contacts\" */ \"./views/contacts-view\")\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onUserRefresh();\n  }\n\n  static propTypes = {\n    onUserRefresh: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n  };\n\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <div className=\"App\">\n        <AppBar />\n        <Suspense\n          fallback={\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#fc4445\"\n              height={100}\n              width={100}\n              timeout={3000}\n            />\n          }\n        >\n          <Switch>\n            <Route path=\"/\" exact component={HomeView} />\n            {isLoading ? (\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#fc4445\"\n                height={100}\n                width={100}\n                timeout={3000}\n              />\n            ) : (\n              <PublicRoute\n                path=\"/register\"\n                restricted\n                redirectTo=\"/\"\n                exact\n                component={RegisterView}\n              />\n            )}\n            {isLoading ? (\n              <Loader\n                type=\"ThreeDots\"\n                color=\"#fc4445\"\n                height={100}\n                width={100}\n                timeout={3000}\n              />\n            ) : (\n              <PublicRoute\n                path=\"/login\"\n                restricted\n                redirectTo=\"/\"\n                component={LoginView}\n              />\n            )}\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              exact\n              component={Contacts}\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst MSTP = (state) => ({\n  isLoading: getIsLoading(state),\n});\n\nconst MDTP = {\n  onUserRefresh: getCurrentUser,\n};\n\nexport default connect(MSTP, MDTP)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\r\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\n//contacts\r\n\r\nexport const fetchContacts = () => {\r\n  return axios.get(\"/contacts\").then((response) => response.data);\r\n};\r\n\r\nexport const addContact = (contact) => {\r\n  return axios.post(\"/contacts\", contact).then(({ data }) => {\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const deleteContact = (contactId) => {\r\n  return axios.delete(`/contacts/${contactId}`);\r\n};\r\n\r\n//auth\r\n\r\nexport const createUser = (credentials) => {\r\n  return axios.post(\"/users/signup\", credentials).then(({ data }) => {\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const loginUser = (credentials) => {\r\n  return axios.post(\"/users/login\", credentials).then(({ data }) => {\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const logoutUser = () => axios.post(\"/users/logout\");\r\n\r\nexport const fetchCurrentUser = () => {\r\n  return axios.get(\"/users/current\").then(({ data }) => {\r\n    return data;\r\n  });\r\n};\r\n\r\n// export const createUser = createAsyncThunk(\r\n//   \"contacts/register\",\r\n//   async (credentials) => {\r\n//     return axios.post(\"/users/signup\", credentials).then(({ data }) => {\r\n//       return data;\r\n//     });\r\n//   }\r\n// );\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__3CdUQ\",\"navLinkActive\":\"Navigation_navLinkActive__2hdPA\"};","import { authActions } from \"./auth-actions\";\r\nimport {\r\n  createUser,\r\n  loginUser,\r\n  logoutUser,\r\n  fetchCurrentUser,\r\n} from \"../../API/contacts-api\";\r\nimport axios from \"axios\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const register = (credential) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const data = await createUser(credential);\r\n    token.set(data.token);\r\n    dispatch(authActions.registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error));\r\n  }\r\n};\r\n\r\nexport const login = (credential) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const data = await loginUser(credential);\r\n    token.set(data.token);\r\n    dispatch(authActions.loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await logoutUser();\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: currentToken },\r\n  } = getState();\r\n\r\n  if (!currentToken) return;\r\n  token.set(currentToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const data = await fetchCurrentUser();\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error));\r\n  }\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport const authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst changeFilter = createAction(\"changeFilter\");\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst removeContactRequest = createAction(\"contacts/removeContactRequest\");\r\nconst removeContactSuccess = createAction(\"contacts/removeContactSuccess\");\r\nconst removeContactError = createAction(\"contacts/removeContactError\");\r\n\r\nexport const actions = {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n};\r\n"],"sourceRoot":""}